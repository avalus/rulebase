{
  "timestamp": "2025-10-30T00:47:11.075Z",
  "summary": {
    "total": 7,
    "passed": 7,
    "failed": 0,
    "duration": 2454
  },
  "suites": [
    {
      "name": "file-updater",
      "category": "unit",
      "path": "unit\\file-updater.test.js",
      "passed": true,
      "exitCode": 0,
      "duration": 64,
      "stdout": "\n📋 FileUpdater Static Methods\n==================================================\n\n🧪 should have all required static methods\n✅ PASSED: should have all required static methods\n\n🧪 should have correct marker constants\n✅ PASSED: should have correct marker constants\n\n📋 Marker Validation\n==================================================\n\n🧪 should validate markers correctly\n✅ PASSED: should validate markers correctly\n\n🧪 should detect missing markers\n✅ PASSED: should detect missing markers\n\n📋 Rule README Updates\n==================================================\n\n🧪 should update rule README with markers\n✅ Updated stats in temp-rule-readme.md: 33 total reactions\n✅ PASSED: should update rule README with markers\n\n🧪 should handle missing markers gracefully\n⚠️  No stats markers found in C:\\Users\\my1dr\\projects\\rulebase\\tests\\fixtures\\temp-no-markers.md. Please add <!-- STATS_START --> and <!-- STATS_END --> around the statistics section.\n✅ PASSED: should handle missing markers gracefully\n\n🧪 should handle non-existent files gracefully\n❌ Rule README not found: non-existent-file.md\n✅ PASSED: should handle non-existent files gracefully\n\n📋 Hall of Fame Updates\n==================================================\n\n🧪 should update Hall of Fame with multiple rules\n✅ Updated Hall of Fame: 2 rules, 58 total reactions\n✅ PASSED: should update Hall of Fame with multiple rules\n\n🧪 should handle missing Hall of Fame file\n❌ non-existent-hall-of-fame.md not found\n✅ PASSED: should handle missing Hall of Fame file\n\n📋 Error Handling\n==================================================\n\n🧪 should handle invalid reaction data\n❌ Rule README not found: non-existent.md\n✅ PASSED: should handle invalid reaction data\n\n🧪 should handle file system errors gracefully\n❌ Rule README not found: /invalid/path/readme.md\n✅ PASSED: should handle file system errors gracefully\n\n📋 Marker Addition\n==================================================\n\n🧪 should add markers to existing stats line\n✅ Added markers to temp-add-markers.md\n✅ PASSED: should add markers to existing stats line\n\n🧪 should detect existing markers\n✅ Markers already exist in temp-existing-markers.md\n✅ PASSED: should detect existing markers\n\n============================================================\n📊 TEST SUMMARY\n============================================================\nTotal Tests: 13\n✅ Passed: 13\n❌ Failed: 0\n⏭️  Skipped: 0\n📈 Success Rate: 100%\n\n🎉 All tests passed!\n",
      "stderr": ""
    },
    {
      "name": "github-api",
      "category": "unit",
      "path": "unit\\github-api.test.js",
      "passed": true,
      "exitCode": 0,
      "duration": 65,
      "stdout": "\n📋 GitHubAPI Constructor\n==================================================\n\n🧪 should initialize with valid token\n✅ PASSED: should initialize with valid token\n\n🧪 should throw error with null token\n✅ PASSED: should throw error with null token\n\n🧪 should throw error with undefined token\n✅ PASSED: should throw error with undefined token\n\n📋 Search Issues Functionality\n==================================================\n\n🧪 should search for issues and pull requests successfully\n✅ PASSED: should search for issues and pull requests successfully\n\n🧪 should handle empty search results\n✅ PASSED: should handle empty search results\n\n🧪 should handle search API errors\n✅ PASSED: should handle search API errors\n\n🧪 should validate search query format\n✅ PASSED: should validate search query format\n\n📋 List Comments Functionality\n==================================================\n\n🧪 should list issue comments successfully\n✅ PASSED: should list issue comments successfully\n\n🧪 should handle empty comments list\n✅ PASSED: should handle empty comments list\n\n🧪 should validate issue number\n✅ PASSED: should validate issue number\n\n📋 Rate Limiting\n==================================================\n\n🧪 should check rate limit status\n✅ PASSED: should check rate limit status\n\n🧪 should handle rate limit exceeded\n✅ PASSED: should handle rate limit exceeded\n\n🧪 should respect rate limiting in search\n✅ PASSED: should respect rate limiting in search\n\n📋 Error Handling\n==================================================\n\n🧪 should handle network errors gracefully\n✅ PASSED: should handle network errors gracefully\n\n🧪 should handle authentication errors\n✅ PASSED: should handle authentication errors\n\n🧪 should handle API quota exceeded\n✅ PASSED: should handle API quota exceeded\n\n🧪 should handle malformed API responses\n✅ PASSED: should handle malformed API responses\n\n📋 Performance Tests\n==================================================\n\n🧪 should complete search within reasonable time\n✅ PASSED: should complete search within reasonable time\n\n🧪 should handle multiple concurrent requests\n✅ PASSED: should handle multiple concurrent requests\n\n============================================================\n📊 TEST SUMMARY\n============================================================\nTotal Tests: 19\n✅ Passed: 19\n❌ Failed: 0\n⏭️  Skipped: 0\n📈 Success Rate: 100%\n\n🎉 All tests passed!\n",
      "stderr": ""
    },
    {
      "name": "reaction-collector",
      "category": "unit",
      "path": "unit\\reaction-collector.test.js",
      "passed": true,
      "exitCode": 0,
      "duration": 63,
      "stdout": "\n📋 ReactionCollector Constructor\n==================================================\n\n🧪 should initialize with valid GitHub API instance\n✅ PASSED: should initialize with valid GitHub API instance\n\n🧪 should throw error with invalid GitHub API instance\n✅ PASSED: should throw error with invalid GitHub API instance\n\n📋 Reaction Collection\n==================================================\n\n🧪 should collect reactions for a single rule\n✅ PASSED: should collect reactions for a single rule\n\n🧪 should handle rules with no GitHub issues\n✅ PASSED: should handle rules with no GitHub issues\n\n🧪 should handle API errors gracefully\n✅ PASSED: should handle API errors gracefully\n\n============================================================\n📊 TEST SUMMARY\n============================================================\nTotal Tests: 5\n✅ Passed: 5\n❌ Failed: 0\n⏭️  Skipped: 0\n📈 Success Rate: 100%\n\n🎉 All tests passed!\n",
      "stderr": ""
    },
    {
      "name": "rule-scanner",
      "category": "unit",
      "path": "unit\\rule-scanner.test.js",
      "passed": true,
      "exitCode": 0,
      "duration": 41,
      "stdout": "\n📋 RuleScanner Static Methods\n==================================================\n\n🧪 should have scanRules static method\n✅ PASSED: should have scanRules static method\n\n🧪 should have getAllRulePaths static method\n✅ PASSED: should have getAllRulePaths static method\n\n🧪 should have getRuleKeyFromPath static method\n✅ PASSED: should have getRuleKeyFromPath static method\n\n🧪 should have ruleExists static method\n✅ PASSED: should have ruleExists static method\n\n📋 Rule Scanning\n==================================================\n\n🧪 should scan rules and return structure\n✅ PASSED: should scan rules and return structure\n\n🧪 should handle non-existent directory gracefully\nRules directory not found: ./non-existent-directory\n✅ PASSED: should handle non-existent directory gracefully\n\n📋 Rule Path Operations\n==================================================\n\n🧪 should get all rule paths\n✅ PASSED: should get all rule paths\n\n🧪 should extract rule key from path\n✅ PASSED: should extract rule key from path\n\n🧪 should check if rule exists\n✅ PASSED: should check if rule exists\n\n📋 Error Handling\n==================================================\n\n🧪 should handle invalid rule keys gracefully\n✅ PASSED: should handle invalid rule keys gracefully\n\n🧪 should handle empty rule paths gracefully\n✅ PASSED: should handle empty rule paths gracefully\n\n============================================================\n📊 TEST SUMMARY\n============================================================\nTotal Tests: 11\n✅ Passed: 11\n❌ Failed: 0\n⏭️  Skipped: 0\n📈 Success Rate: 100%\n\n🎉 All tests passed!\n",
      "stderr": ""
    },
    {
      "name": "workflow",
      "category": "integration",
      "path": "integration\\workflow.test.js",
      "passed": true,
      "exitCode": 0,
      "duration": 58,
      "stdout": "\n📋 Complete Workflow Integration\n==================================================\n\n🧪 should complete full update workflow for rule README\n✅ Updated stats in workflow-rule-readme.md: 52 total reactions\n✅ PASSED: should complete full update workflow for rule README\n\n🧪 should complete full update workflow for Hall of Fame\n✅ Updated Hall of Fame: 3 rules, 235 total reactions\n✅ PASSED: should complete full update workflow for Hall of Fame\n\n🧪 should handle workflow with marker validation\n✅ Updated stats in validation-test.md: 42 total reactions\n✅ PASSED: should handle workflow with marker validation\n\n🧪 should handle workflow with missing markers gracefully\n⚠️  No stats markers found in C:\\Users\\my1dr\\projects\\rulebase\\tests\\fixtures\\no-markers-test.md. Please add <!-- STATS_START --> and <!-- STATS_END --> around the statistics section.\n✅ PASSED: should handle workflow with missing markers gracefully\n\n📋 End-to-End Workflow Simulation\n==================================================\n\n🧪 should simulate complete stats update cycle\n✅ Updated stats in production-rule.md: 32 total reactions\n✅ Updated Hall of Fame: 1 rules, 150 total reactions\n✅ PASSED: should simulate complete stats update cycle\n",
      "stderr": ""
    },
    {
      "name": "complete-workflow",
      "category": "e2e",
      "path": "e2e\\complete-workflow.test.js",
      "passed": true,
      "exitCode": 0,
      "duration": 2095,
      "stdout": "\n📋 Full System Integration\n==================================================\n\n🧪 should run complete workflow from scanning to file updates\n✅ PASSED: should run complete workflow from scanning to file updates\n\n🧪 should handle complete workflow with real file operations\n✅ Updated stats in e2e-rule.md: 21 total reactions\n⚠️  No markers found for rule test/rule in Hall of Fame\n✅ Updated Hall of Fame: 0 rules, 21 total reactions\n❌ FAILED: should handle complete workflow with real file operations\n   Error: Hall should be updated\nExpected truthy value, got: false\n   Stack: Expected truthy value, got: false\n\n📋 Error Recovery and Resilience\n==================================================\n\n🧪 should recover from API failures gracefully\n✅ PASSED: should recover from API failures gracefully\n\n🧪 should handle missing files gracefully in complete workflow\n❌ non-existent-hall-of-fame.md not found\n❌ Rule README not found: non-existent-rule.md\n✅ PASSED: should handle missing files gracefully in complete workflow\n📄 Mock API: Getting content for \"rules/coding/smart-code-reviewer/README.md\"\n📄 Mock API: Getting content for \"test/rule\"\nFetching reactions for rule: coding/smart-code-reviewer (name: \"Smart Code Reviewer\", folder: \"smart-code-reviewer\", category: coding)\nFetching reactions for rule: test/rule (name: \"Rule\", folder: \"rule\", category: test)\n🔍 Mock API: Searching for \"repo:test-owner/test-repo \"coding/smart-code-reviewer\" in:body\"\nFound 2 items for query: repo:test-owner/test-repo \"coding/smart-code-reviewer\" in:body\nSearch query failed: repo:test-owner/test-repo \"test/rule\" in:body - Mock API failure - shouldFail is true\nError processing item 123: Cannot read properties of undefined (reading 'listForIssue')\nSearch query failed: repo:test-owner/test-repo \"test/rule\" in:body - Mock API failure - shouldFail is true\nError processing item 124: Cannot read properties of undefined (reading 'listForIssue')\n🔍 Mock API: Searching for \"repo:test-owner/test-repo \"rules/coding/smart-code-reviewer/README.md\" in:body\"\nSearch query failed: repo:test-owner/test-repo \"Rule\" in:title - Mock API failure - shouldFail is true\nFound 2 items for query: repo:test-owner/test-repo \"rules/coding/smart-code-reviewer/README.md\" in:body\nError processing item 123: Cannot read properties of undefined (reading 'listForIssue')\nSearch query failed: repo:test-owner/test-repo \"Rule\" in:body - Mock API failure - shouldFail is true\nError processing item 124: Cannot read properties of undefined (reading 'listForIssue')\n🔍 Mock API: Searching for \"repo:test-owner/test-repo \"Smart Code Reviewer\" in:title\"\nDiscussions not available or error: Mock GraphQL failure - shouldFail is true\nCollected reactions for test/rule: {\n  thumbsUp: 0,\n  heart: 0,\n  rocket: 0,\n  eyes: 0,\n  confused: 0,\n  total: 0,\n  positivePercentage: 0\n}\n❌ non-existent-hall-of-fame.md not found\nFound 2 items for query: repo:test-owner/test-repo \"Smart Code Reviewer\" in:title\nError processing item 123: Cannot read properties of undefined (reading 'listForIssue')\nError processing item 124: Cannot read properties of undefined (reading 'listForIssue')\n🔍 Mock API: Searching for \"repo:test-owner/test-repo \"Smart Code Reviewer\" in:body\"\nFound 2 items for query: repo:test-owner/test-repo \"Smart Code Reviewer\" in:body\nError processing item 123: Cannot read properties of undefined (reading 'listForIssue')\nError processing item 124: Cannot read properties of undefined (reading 'listForIssue')\n🔍 Mock GraphQL: Query for discussions in test-owner/test-repo\nDiscussions not available or error: ruleKeyLower is not defined\nCollected reactions for coding/smart-code-reviewer: {\n  thumbsUp: 3,\n  heart: 0,\n  rocket: 1,\n  eyes: 1,\n  confused: 0,\n  total: 5,\n  positivePercentage: 100\n}\n📄 Mock API: Getting content for \"rules/content/technical-writer/README.md\"\nFetching reactions for rule: content/technical-writer (name: \"Technical Writer\", folder: \"technical-writer\", category: content)\n🔍 Mock API: Searching for \"repo:test-owner/test-repo \"content/technical-writer\" in:body\"\nFound 2 items for query: repo:test-owner/test-repo \"content/technical-writer\" in:body\nError processing item 123: Cannot read properties of undefined (reading 'listForIssue')\nError processing item 124: Cannot read properties of undefined (reading 'listForIssue')\n🔍 Mock API: Searching for \"repo:test-owner/test-repo \"rules/content/technical-writer/README.md\" in:body\"\nFound 2 items for query: repo:test-owner/test-repo \"rules/content/technical-writer/README.md\" in:body\nError processing item 123: Cannot read properties of undefined (reading 'listForIssue')\nError processing item 124: Cannot read properties of undefined (reading 'listForIssue')\n🔍 Mock API: Searching for \"repo:test-owner/test-repo \"Technical Writer\" in:title\"\nFound 2 items for query: repo:test-owner/test-repo \"Technical Writer\" in:title\nError processing item 123: Cannot read properties of undefined (reading 'listForIssue')\nError processing item 124: Cannot read properties of undefined (reading 'listForIssue')\n🔍 Mock API: Searching for \"repo:test-owner/test-repo \"Technical Writer\" in:body\"\nFound 2 items for query: repo:test-owner/test-repo \"Technical Writer\" in:body\nError processing item 123: Cannot read properties of undefined (reading 'listForIssue')\nError processing item 124: Cannot read properties of undefined (reading 'listForIssue')\n🔍 Mock GraphQL: Query for discussions in test-owner/test-repo\nCollected reactions for content/technical-writer: {\n  thumbsUp: 0,\n  heart: 0,\n  rocket: 0,\n  eyes: 0,\n  confused: 0,\n  total: 0,\n  positivePercentage: 0\n}\n❌ non-existent-hall-of-fame.md not found\n",
      "stderr": ""
    },
    {
      "name": "edge-cases",
      "category": "e2e",
      "path": "e2e\\edge-cases.test.js",
      "passed": true,
      "exitCode": 0,
      "duration": 68,
      "stdout": "\n📋 File System Edge Cases\n==================================================\n\n🧪 should handle empty rule directories\n✅ PASSED: should handle empty rule directories\n\n🧪 should handle malformed README files\n✅ PASSED: should handle malformed README files\n\n🧪 should handle deeply nested rule structures\n✅ PASSED: should handle deeply nested rule structures\n\n📋 API Error Handling\n==================================================\n\n🧪 should handle network timeouts gracefully\n✅ PASSED: should handle network timeouts gracefully\n\n🧪 should handle rate limiting\n✅ PASSED: should handle rate limiting\n\n🧪 should handle malformed API responses\n✅ PASSED: should handle malformed API responses\n\n📋 Data Validation Edge Cases\n==================================================\n\n🧪 should handle extreme reaction values\n✅ PASSED: should handle extreme reaction values\n\n🧪 should handle zero and negative values\n✅ PASSED: should handle zero and negative values\n\n🧪 should handle invalid data types\n✅ PASSED: should handle invalid data types\n\n📋 Performance Edge Cases\n==================================================\n\n🧪 should handle large datasets efficiently\n✅ PASSED: should handle large datasets efficiently\n\n🧪 should handle rapid successive operations\n✅ PASSED: should handle rapid successive operations\n\n📋 File System Stress Tests\n==================================================\n\n🧪 should handle concurrent file operations\n✅ PASSED: should handle concurrent file operations\n\n📋 File Operation Edge Cases\n==================================================\n\n🧪 should handle missing HALL_OF_FAME.md gracefully\n❌ non-existent-hall-of-fame.md not found\n✅ PASSED: should handle missing HALL_OF_FAME.md gracefully\n\n🧪 should handle corrupted README files\n⚠️  No stats markers found in C:\\Users\\my1dr\\projects\\rulebase\\tests\\fixtures\\corrupted-rule.md. Please add <!-- STATS_START --> and <!-- STATS_END --> around the statistics section.\n✅ PASSED: should handle corrupted README files\n\n🧪 should handle empty reaction data\n❌ non-existent-hall-of-fame.md not found\n✅ PASSED: should handle empty reaction data\n\n🧪 should handle invalid reaction data structures\n❌ non-existent-hall-of-fame.md not found\n✅ PASSED: should handle invalid reaction data structures\n\n📋 Template Generation Edge Cases\n==================================================\n\n🧪 should handle zero reactions in all categories\n✅ PASSED: should handle zero reactions in all categories\n\n🧪 should handle very large reaction numbers\n✅ PASSED: should handle very large reaction numbers\n\n🧪 should handle missing reaction properties\n✅ PASSED: should handle missing reaction properties\n\n📋 File System Edge Cases\n==================================================\n\n🧪 should handle read-only files\n✅ PASSED: should handle read-only files\n\n🧪 should handle very long file paths\n❌ Rule README not found: C:\\Users\\my1dr\\projects\\rulebase\\tests\\fixtures\\aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa-rule.md\n✅ PASSED: should handle very long file paths\n\n============================================================\n📊 TEST SUMMARY\n============================================================\nTotal Tests: 21\n✅ Passed: 21\n❌ Failed: 0\n⏭️  Skipped: 0\n📈 Success Rate: 100%\n\n🎉 All tests passed!\n",
      "stderr": ""
    }
  ],
  "environment": {
    "nodeVersion": "v24.11.0",
    "platform": "win32",
    "arch": "x64"
  }
}